const X="https://onsvisual.github.io/geo-hub",P="https://cdn.ons.gov.uk/maptiles/ap-geos/v1",L={E06:{label:"unitary authority",plural:"unitary authorities"},W06:{label:"unitary authority",plural:"unitary authorities"},E07:{label:"non-metropolitan district",plural:"non-metropolitan districts"},E08:{label:"metropolitan district",plural:"metropolitan districts"},E09:{label:"borough",plural:"boroughs"},E10:{label:"county",plural:"counties"},E11:{label:"metropolitan county",plural:"metropolital counties"}},O=[{key:"ew",codes:["K04"],source:{type:"geojson",promoteId:"areacd"}},{key:"ctry",codes:["E92","W92"],pcio:"country",label:"country",plural:"countries",source:{type:"geojson",promoteId:"areacd"}},{key:"rgn",codes:["E12"],pcio:"region",label:"region",plural:"regions",source:{type:"geojson",promoteId:"areacd"}},{key:"cty",codes:["E10","E11","E06","W06","E09"],pcio:"admin_county",label:"county/unitary authority",plural:"counties/unitary authorities",source:{type:"vector",url:"https://cdn.ons.gov.uk/maptiles/administrative/2021/cty/v1/boundaries/{z}/{x}/{y}.pbf",promoteId:"areacd",minzoom:4}},{key:"lad",codes:["E06","E07","E08","E09","W06"],pcio:"admin_district",label:"district",plural:"districts",source:{type:"vector",url:"https://cdn.ons.gov.uk/maptiles/administrative/2021/authorities-ew/v2/boundaries/{z}/{x}/{y}.pbf",promoteId:"areacd",minzoom:4}},{key:"wpc",codes:["E14","W07"],pcio:"parliamentary_constituency",label:"parliamentary constituency",plural:"parliamentary constituencies",source:{type:"vector",url:"https://cdn.ons.gov.uk/maptiles/administrative/2010/wpc/v1/boundaries/{z}/{x}/{y}.pbf",promoteId:"areacd",minzoom:4}},{key:"wd",codes:["E05","W05"],pcio:"admin_ward",label:"ward",plural:"wards",source:{type:"vector",url:"https://cdn.ons.gov.uk/maptiles/administrative/2022/wd/v1/boundaries/{z}/{x}/{y}.pbf",promoteId:"areacd",minzoom:6}},{key:"par",codes:["E04","W04"],pcio:"parish",label:"parish",plural:"parishes",source:{type:"vector",url:"https://cdn.ons.gov.uk/maptiles/administrative/2022/par/v1/boundaries/{z}/{x}/{y}.pbf",promoteId:"areacd",minzoom:6}},{key:"msoa",codes:["E02","W02"],pcio:"msoa",label:"MSOA",plural:"MSOAs",source:{type:"vector",url:"https://cdn.ons.gov.uk/maptiles/administrative/2021/msoa/v2/boundaries/{z}/{x}/{y}.pbf",promoteId:"areacd",minzoom:6}},{key:"lsoa",codes:["E01","W01"],pcio:"lsoa",label:"LSOA",plural:"LSOAs",source:{type:"vector",url:"https://cdn.ons.gov.uk/maptiles/administrative/2021/lsoa/v2/boundaries/{z}/{x}/{y}.pbf",promoteId:"areacd",minzoom:7}},{key:"oa",codes:["E00","W00"],label:"output area",plural:"output areas",source:{type:"vector",url:"https://cdn.ons.gov.uk/maptiles/administrative/2021/oa/v2/boundaries/{z}/{x}/{y}.pbf",promoteId:"areacd",minzoom:8}}],z=(()=>{let e={};return O.forEach(r=>r.codes.forEach(t=>e[t]=r)),e})();(()=>{let e={};return O.forEach(r=>e[r.key]=r),e})();const ee={England:"E92000001",Wales:"W92000004","North East":"E12000001","North West":"E12000002","Yorkshire and The Humber":"E12000003","East Midlands":"E12000004","West Midlands":"E12000005","East of England":"E12000006",London:"E12000007","South East":"E12000008","South West":"E12000009"};var S={},A={},W=34,k=10,N=13;function D(e){return new Function("d","return {"+e.map(function(r,t){return JSON.stringify(r)+": d["+t+'] || ""'}).join(",")+"}")}function F(e,r){var t=D(e);return function(a,o){return r(t(a),o,e)}}function R(e){var r=Object.create(null),t=[];return e.forEach(function(a){for(var o in a)o in r||t.push(r[o]=o)}),t}function f(e,r){var t=e+"",a=t.length;return a<r?new Array(r-a+1).join(0)+t:t}function x(e){return e<0?"-"+f(-e,6):e>9999?"+"+f(e,6):f(e,4)}function $(e){var r=e.getUTCHours(),t=e.getUTCMinutes(),a=e.getUTCSeconds(),o=e.getUTCMilliseconds();return isNaN(e)?"Invalid Date":x(e.getUTCFullYear())+"-"+f(e.getUTCMonth()+1,2)+"-"+f(e.getUTCDate(),2)+(o?"T"+f(r,2)+":"+f(t,2)+":"+f(a,2)+"."+f(o,3)+"Z":a?"T"+f(r,2)+":"+f(t,2)+":"+f(a,2)+"Z":t||r?"T"+f(r,2)+":"+f(t,2)+"Z":"")}function H(e){var r=new RegExp('["'+e+`
\r]`),t=e.charCodeAt(0);function a(n,i){var p,l,d=o(n,function(E,g){if(p)return p(E,g-1);l=E,p=i?F(E,i):D(E)});return d.columns=l||[],d}function o(n,i){var p=[],l=n.length,d=0,E=0,g,j=l<=0,b=!1;n.charCodeAt(l-1)===k&&--l,n.charCodeAt(l-1)===N&&--l;function I(){if(j)return A;if(b)return b=!1,S;var C,T=d,v;if(n.charCodeAt(T)===W){for(;d++<l&&n.charCodeAt(d)!==W||n.charCodeAt(++d)===W;);return(C=d)>=l?j=!0:(v=n.charCodeAt(d++))===k?b=!0:v===N&&(b=!0,n.charCodeAt(d)===k&&++d),n.slice(T+1,C-1).replace(/""/g,'"')}for(;d<l;){if((v=n.charCodeAt(C=d++))===k)b=!0;else if(v===N)b=!0,n.charCodeAt(d)===k&&++d;else if(v!==t)continue;return n.slice(T,C)}return j=!0,n.slice(T,l)}for(;(g=I())!==A;){for(var w=[];g!==S&&g!==A;)w.push(g),g=I();i&&(w=i(w,E++))==null||p.push(w)}return p}function c(n,i){return n.map(function(p){return i.map(function(l){return s(p[l])}).join(e)})}function u(n,i){return i==null&&(i=R(n)),[i.map(s).join(e)].concat(c(n,i)).join(`
`)}function h(n,i){return i==null&&(i=R(n)),c(n,i).join(`
`)}function y(n){return n.map(m).join(`
`)}function m(n){return n.map(s).join(e)}function s(n){return n==null?"":n instanceof Date?$(n):r.test(n+="")?'"'+n.replace(/"/g,'""')+'"':n}return{parse:a,parseRows:o,format:u,formatBody:h,formatRows:y,formatRow:m,formatValue:s}}var Z=H(","),_=Z.parse;function B(e){for(var r in e){var t=e[r].trim(),a,o;if(!t)t=null;else if(t==="true")t=!0;else if(t==="false")t=!1;else if(t==="NaN")t=NaN;else if(!isNaN(a=+t))t=a;else if(o=t.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/))G&&o[4]&&!o[7]&&(t=t.replace(/-/g,"/").replace(/T/," ")),t=new Date(t);else continue;e[r]=t}return e}const G=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours();function Y(e){return e}function J(e){if(e==null)return Y;var r,t,a=e.scale[0],o=e.scale[1],c=e.translate[0],u=e.translate[1];return function(h,y){y||(r=t=0);var m=2,s=h.length,n=new Array(s);for(n[0]=(r+=h[0])*a+c,n[1]=(t+=h[1])*o+u;m<s;)n[m]=h[m],++m;return n}}function K(e,r){for(var t,a=e.length,o=a-r;o<--a;)t=e[o],e[o++]=e[a],e[a]=t}function V(e,r){return typeof r=="string"&&(r=e.objects[r]),r.type==="GeometryCollection"?{type:"FeatureCollection",features:r.geometries.map(function(t){return M(e,t)})}:M(e,r)}function M(e,r){var t=r.id,a=r.bbox,o=r.properties==null?{}:r.properties,c=Q(e,r);return t==null&&a==null?{type:"Feature",properties:o,geometry:c}:a==null?{type:"Feature",id:t,properties:o,geometry:c}:{type:"Feature",id:t,bbox:a,properties:o,geometry:c}}function Q(e,r){var t=J(e.transform),a=e.arcs;function o(s,n){n.length&&n.pop();for(var i=a[s<0?~s:s],p=0,l=i.length;p<l;++p)n.push(t(i[p],p));s<0&&K(n,l)}function c(s){return t(s)}function u(s){for(var n=[],i=0,p=s.length;i<p;++i)o(s[i],n);return n.length<2&&n.push(n[0]),n}function h(s){for(var n=u(s);n.length<4;)n.push(n[0]);return n}function y(s){return s.map(h)}function m(s){var n=s.type,i;switch(n){case"GeometryCollection":return{type:n,geometries:s.geometries.map(m)};case"Point":i=c(s.coordinates);break;case"MultiPoint":i=s.coordinates.map(c);break;case"LineString":i=u(s.arcs);break;case"MultiLineString":i=s.arcs.map(u);break;case"Polygon":i=y(s.arcs);break;case"MultiPolygon":i=s.arcs.map(y);break;default:return null}return{type:n,coordinates:i}}return m(r)}async function te(e,r=window.fetch){let a=await(await r(e)).text(),o=_(a,B),c=o.columns.filter(u=>o[0][u]&&o[0][u].includes("|"));return o.forEach((u,h)=>{c.forEach(y=>{u[y]=u[y].split("|")})}),o}async function re(e,r=window.fetch){try{let t=e.slice(0,3),o=await(await r(`${P}/${t}/${e}.json`)).json();L[t]&&(o.properties.typenm=L[t].label);let c=o.properties.children[0]?Array.from(new Set(o.properties.children.map(u=>u.areacd.slice(0,3)))):null;return o.properties.childTypes=c?Array.from(new Set(c.map(u=>z[u]))):[],t==="E12"&&(o.properties.childTypes=o.properties.childTypes.filter(u=>u.key!=="lad"),e==="E12000007"&&(o.properties.childTypes=[{key:"lad",codes:["E09"],label:"borough",plural:"boroughs"},...o.properties.childTypes])),{place:o.properties,type:z[t]}}catch{return{place:null,type:null}}}function q(e,r=null){let t=e.hclnm?e.hclnm:e.areanm?e.areanm:e.areacd,a=t.startsWith("Isle"),o=e.areacd.slice(0,3)==="E12"&&!["E12000003","E12000007"].includes(e.areacd);return t=t.replace("&","and"),["in","the"].includes(r)&&(a||o)&&(t="the "+t),r==="in"&&(a?t="on "+t:t="in "+t),t}function U(e,r){for(const t of r){let a=t.areacd.slice(0,3);if(e.includes(a))return t.groupcd=z[a].key,t}return null}function ne(e,r){let t=[],a=[];return e.forEach(o=>{let c=U(o.geocodes,r.parents);o.geocodes.includes(r.typecd)?t.push({...o,place:r}):c&&a.push({...o,place:U(o.geocodes,r.parents)})}),[...t,...a]}function oe(e,r){let t=e,a=e.match(new RegExp(/\{(.*?)\}/g));return Array.isArray(a)&&a.forEach(o=>{if(o.includes("name")){let c=o.slice(1,-1).split(",")[1];t=t.replace(o,q(r,c))}else t=t.replace(o,r[o.slice(1,-1)])}),t}function ae(e){return!e.startsWith("unit")&&["a","e","i","o","u"].includes(e.slice(0,1).toLowerCase())?"an "+e:"a "+e}function ie(e){return["K04","E92","W92","E10","E11","E12","E06","E07","E08","E09","W06"].includes(e.slice(0,3))?e+"/":"area/?code="+e}function se(e,r){return V(e,r)}function ce(e){return e[0].toUpperCase()+e.slice(1)}function ue(e){window.dataLayer&&window.dataLayer.push(e)}export{L as a,z as b,ce as c,X as d,O as e,ee as f,te as g,ue as h,q as i,re as j,ae as k,ne as l,ie as m,se as n,oe as p};
